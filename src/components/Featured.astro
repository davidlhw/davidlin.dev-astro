---
import Label from "./Label.astro";
import locale from "@/locale";
import config from "@/config";
import { getCollection } from "astro:content";

const posts = await getCollection("blog");
const projects = await getCollection("projects");
const notes = await getCollection("notes");

const featuredItems = [
  ...posts.map((e) => ({ ...e, path: config.NAV.BLOG.NAME.toLowerCase() })),
  ...projects.map((e) => ({
    ...e,
    path: config.NAV.PROJECTS.NAME.toLowerCase(),
  })),
  ...notes.map((e) => ({
    ...e,
    path: config.NAV.NOTES.NAME.toLowerCase(),
  })),
]
  .filter((e) => !(import.meta.env.MODE === "production" && e.data.draft))
  .filter((e) => e.data.featured)
  .sort(
    (a, b) => new Date(b.data.date).valueOf() - new Date(a.data.date).valueOf()
  );
---

<section class="pt-4 pb-4">
  <h2 class="font-bold text-xl md:text-2xl pb-4 text-text-heading">
    {locale.en.landing.FEATURED.TITLE}
  </h2>
  <ul>
    {
      featuredItems.map((item) => {
        const formattedDate = new Date(item.data.date).toLocaleDateString(
          "en-us",
          {
            year: "numeric",
            month: "short",
            day: "numeric",
          }
        );
        return (
          <li class="grid grid-cols-[1fr] md:grid-cols-[1fr_auto] mb-3 md:gap-2 items-start">
            <div class="title">
              {item.data.external ? (
                <a
                  href={item.data.url}
                  target="_blank"
                  class="unset hover:text-text-link"
                >
                  <span>{item.data.title}</span>
                  <span>
                    <i class="ml-1 mr-1 text-[12px] pb-2 fa-solid fa-up-right-from-square" />
                  </span>
                  {item.data.label ? (
                    <Label label={item.data.label}>{item.data.label}</Label>
                  ) : null}
                </a>
              ) : (
                <a
                  href={`/${item.path}/${item.slug}`}
                  class="unset hover:text-text-link"
                  rel="prefetch"
                >
                  {item.data.title}
                </a>
              )}
            </div>
            <div class="text-text-muted text-sm italic pt-1">
              <time datetime={item.data.date.toISOString()}>
                {formattedDate}
              </time>
            </div>
          </li>
        );
      })
    }
  </ul>
</section>
